services:
  phoneBookApi:
    image: phonebookapi:0.1.0
    container_name: phonebookapi
    depends_on:
      - phoneBookDb
      - rabbitmq
    ports:
      - 90:80
    build:
      context: .
      dockerfile: PhoneBook.API/Dockerfile
      
  phoneBookService:
    image: phonebookservice:0.1.0
    container_name: phonebookservice
    depends_on:
      - phoneBookDb
      - rabbitmq
    build:
      context: .
      dockerfile: PhoneBook.Service/Dockerfile

  phoneBookDb:
    image: postgres:13.0-alpine
    container_name: dev_phoneBookDb
    ports:
      - 5432:5432
    volumes: 
      - phoneBookDb-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: PhoneBookDb

  reportingDb:
    image: postgres:13.0-alpine
    container_name: dev_reportingDb
    ports:
      - 5433:5433
    volumes: 
      - reportingDb-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: ReportingDb

  adminer:
    image: adminer:4.7.7
    container_name: adminer
    restart: always
    ports:
      - 9090:8080

  rabbitmq:
    #image: rabbitmq:3.8.9-management
    image: rabbitmqservice:0.1.0
    build:
      context: ./RabbitMQ/
    container_name: dev_rabbit
    hostname: dev_rabbit1
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit-etc:/etc/rabbitmq/
      - rabbit-lib:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    command: sh -c 'rabbitmq-plugins enable rabbitmq_management; rabbitmq-server'
      # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
    image: mongo:3.6.20
    volumes:
      - mongo_data:/data/db
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.13
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:3.3.8
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
volumes:
  phoneBookDb-data:
  reportingDb-data:
  rabbit-etc:
  rabbit-lib:
  rabbit-log:
  mongo_data:
  es_data:
  graylog_data:
