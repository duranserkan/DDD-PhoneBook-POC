services:
  phoneBookApi:
    image: phonebookapi:0.1.0
    container_name: phonebookapi
    depends_on:
      - phoneBookDb
      - rabbitmq
    ports:
      - 90:80
    build:
      context: .
      dockerfile: PhoneBook.API/Dockerfile
      
  phoneBookService:
    image: phonebookservice:0.1.0
    container_name: phonebookservice
    depends_on:
      - phoneBookDb
      - rabbitmq
    build:
      context: .
      dockerfile: PhoneBook.Service/Dockerfile

  phoneBookDb:
    image: postgres
    container_name: dev_phoneBookDb
    ports:
      - 5432:5432
    volumes: 
      - phoneBookDb-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: PhoneBookDb

  reportingDb:
    image: postgres
    container_name: dev_reportingDb
    ports:
      - 5433:5433
    volumes: 
      - reportingDb-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: ReportingDb

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080

  rabbitmq:
    image: rabbitmqservice:0.1.0
    build:
      context: ./RabbitMQ/
    container_name: dev_rabbit
    hostname: dev_rabbit1
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit-etc:/etc/rabbitmq/
      - rabbit-lib:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_VHOST: /
    command: sh -c 'rabbitmq-plugins enable rabbitmq_management; rabbitmq-server'
volumes:
  phoneBookDb-data:
  reportingDb-data:
  rabbit-etc:
  rabbit-lib:
